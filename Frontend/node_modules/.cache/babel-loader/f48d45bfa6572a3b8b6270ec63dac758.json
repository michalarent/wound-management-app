{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/UserWounds.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport WoundList from \"../components/WoundList\";\nimport { useContext } from 'react';\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './UserWounds.css';\n\nconst UserWounds = () => {\n  const auth = useContext(AuthContext);\n  const userId = useParams().userId;\n  const [loadedWounds, setLoadedWounds] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      const response = await fetch(`http://localhost:5000/api/wounds/user/${userId}`);\n      const responseData = await response.json();\n\n      if (!response.ok) {} else {\n        setLoadedWounds(responseData.wounds);\n      }\n    };\n\n    sendRequest();\n  }, []);\n  console.log(loadedWounds);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loadedWounds && /*#__PURE__*/React.createElement(WoundList, {\n    items: loadedWounds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }\n  }));\n};\n\nexport default UserWounds;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/UserWounds.js"],"names":["React","useState","useEffect","useParams","WoundList","useContext","AuthContext","UserWounds","auth","userId","loadedWounds","setLoadedWounds","sendRequest","response","fetch","responseData","json","ok","wounds","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,IAAI,GAAGH,UAAU,CAACC,WAAD,CAAvB;AACA,QAAMG,MAAM,GAAGN,SAAS,GAAGM,MAA3B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCL,MAAO,EAAjD,CAA5B;AACA,YAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB,CACjB,CADD,MACO;AACLN,QAAAA,eAAe,CAACI,YAAY,CAACG,MAAd,CAAf;AACD;AACF,KAPD;;AAQAN,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT;AAWAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACA,sBAAQ,0CACPA,YAAY,iBAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAGA,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CAAR;AAID,CApBD;;AAsBA,eAAeH,UAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport WoundList from \"../components/WoundList\";\nimport { useContext } from 'react';\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport './UserWounds.css';\n\nconst UserWounds = () => {\n  const auth = useContext(AuthContext);\n  const userId = useParams().userId;\n  const [loadedWounds, setLoadedWounds] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      const response = await fetch(`http://localhost:5000/api/wounds/user/${userId}`);\n      const responseData = await response.json();\n      if (!response.ok) {\n      } else {\n        setLoadedWounds(responseData.wounds);\n      }\n    };\n    sendRequest();\n  }, []);\n  console.log(loadedWounds)\n  return (<>\n  {loadedWounds && <WoundList items ={loadedWounds} />}\n   \n   </>)\n};\n\nexport default UserWounds;\n"]},"metadata":{},"sourceType":"module"}