{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/NewSong.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_URL } from '../../shared/util/validators';\nimport Button from '../../shared/components/UIElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './NewSong.css';\n\nconst NewSong = () => {\n  const [formState, changeHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    url: {\n      value: '',\n      isValid: false\n    }\n  }, false); // const changeHandler = useCallback((id, value, isValid) => {\n  //     dispatch({\n  //         type: 'INPUT_CHANGE',\n  //         value: value, \n  //         isValid: isValid, \n  //         inputId: id\n  //     })\n  // }, []);\n  // send data to the server!\n\n  const submitHandler = event => {\n    event.preventDefault(); // check if json is ok\n\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"song-form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid description!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"url\",\n    element: \"input\",\n    label: \"Song URL\",\n    validators: [VALIDATOR_URL()],\n    errorText: \"Please enter a valid URL! Only links from Spotify, Soundcloud and Youtube are accepted!!!!!!!!!!!!!!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, \"ADD SONG\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Is the form valid? \", String(formState.isValid)));\n};\n\nexport default NewSong;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/NewSong.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_URL","Button","useForm","NewSong","formState","changeHandler","title","value","isValid","description","url","submitHandler","event","preventDefault","console","log","inputs","String"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AAEA,SAAQC,iBAAR,EAA2BC,mBAA3B,EAAgDC,aAAhD,QAAoE,8BAApE;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,OAAO,eAAP;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,aAAZ,IACFH,OAAO,CACH;AACII,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,EADJ;AAEHC,MAAAA,OAAO,EAAE;AAFN,KADX;AAKIC,IAAAA,WAAW,EAAE;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KALjB;AASIE,IAAAA,GAAG,EAAE;AACDH,MAAAA,KAAK,EAAE,EADN;AAEDC,MAAAA,OAAO,EAAE;AAFR;AATT,GADG,EAcA,KAdA,CADX,CADkB,CAmBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMG,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAE3B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACY,MAAtB;AACH,GAJD;;AAOA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEL,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,UAAU,EAAE,CAACb,iBAAiB,EAAlB,CAJhB;AAKI,IAAA,SAAS,EAAC,6BALd;AAMI,IAAA,OAAO,EAAEO,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,aAAV;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,UAAU,EAAE,CAACN,mBAAmB,CAAC,CAAD,CAApB,CAHhB;AAII,IAAA,SAAS,EAAC,mCAJd;AAKI,IAAA,OAAO,EAAEM,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAcI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,KAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,UAAU,EAAE,CAACL,aAAa,EAAd,CAHhB;AAII,IAAA,SAAS,EAAC,sGAJd;AAKI,IAAA,OAAO,EAAEK,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAoBG,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBH,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBS,MAAM,CAACb,SAAS,CAACI,OAAX,CAA7B,CArBJ,CADJ;AAyBH,CA7DD;;AA+DA,eAAeL,OAAf","sourcesContent":["import React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input'\n\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_URL} from '../../shared/util/validators'\nimport Button from '../../shared/components/UIElements/Button'\nimport { useForm } from '../../shared/hooks/form-hook'\n\nimport './NewSong.css';\n\n\n\nconst NewSong = () => {\n    const [formState, changeHandler] = \n        useForm(\n            {\n                title: {\n                    value: '',\n                    isValid: false\n                },\n                description: {\n                    value: '',\n                    isValid: false\n                },\n                url: {\n                    value: '',\n                    isValid: false\n                }\n            }, false\n    );\n\n    // const changeHandler = useCallback((id, value, isValid) => {\n    //     dispatch({\n    //         type: 'INPUT_CHANGE',\n    //         value: value, \n    //         isValid: isValid, \n    //         inputId: id\n    //     })\n    // }, []);\n\n    // send data to the server!\n    const submitHandler = event => {\n        event.preventDefault();\n        // check if json is ok\n        console.log(formState.inputs);\n    };\n    \n\n    return (\n        <form className=\"song-form\" onSubmit={submitHandler}>\n            <Input id=\"title\"\n                element=\"input\"\n                type=\"text\" \n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]} \n                errorText='Please enter a valid title!'\n                onInput={changeHandler} />     \n            <Input id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(3)]} \n                errorText='Please enter a valid description!'\n                onInput={changeHandler}/>\n            <Input id=\"url\"\n                element=\"input\"\n                label=\"Song URL\"\n                validators={[VALIDATOR_URL()]} \n                errorText='Please enter a valid URL! Only links from Spotify, Soundcloud and Youtube are accepted!!!!!!!!!!!!!!'\n                onInput={changeHandler}/>\n           <Button type=\"submit\" disabled={!formState.isValid}>ADD SONG</Button> \n            <p>Is the form valid? {String(formState.isValid)}</p>\n        </form>\n    );\n}\n\nexport default NewSong;"]},"metadata":{},"sourceType":"module"}