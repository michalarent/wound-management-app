{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Auth.js\";\nimport React from 'react';\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH } from '../../shared/util/validators';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Button from '../../shared/components/UIElements/Button';\n\nconst Auth = () => {\n  const [formState, changeHandler] = useForm({\n    email: {\n      value: 'a@b.c',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false); // send data to the server!\n\n  const submitHandler = event => {\n    event.preventDefault(); // check if json is ok\n\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"song-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Email\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(100)],\n    errorText: \"Please enter a valid password!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Login\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Auth.js"],"names":["React","VALIDATOR_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MAXLENGTH","Input","useForm","Button","Auth","formState","changeHandler","email","value","isValid","password","submitHandler","event","preventDefault","console","log","inputs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,EAA4CC,mBAA5C,QAAsE,8BAAtE;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAM,CAACC,SAAD,EAAYC,aAAZ,IACFJ,OAAO,CACH;AACIK,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,OAAO,EAAE;AAFN,KADX;AAKIC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH;AALd,GADG,EAUA,KAVA,CADX,CAFe,CAmBf;;AACA,QAAME,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAE3B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,MAAtB;AACH,GAJD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,UAAU,EAAE,CAACjB,iBAAiB,EAAlB,EAAsBD,eAAe,EAArC,CAJhB;AAKI,IAAA,SAAS,EAAC,6BALd;AAMI,IAAA,OAAO,EAAEQ,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,UAAU,EAAE,CAACP,iBAAiB,EAAlB,EAAsBC,mBAAmB,CAAC,GAAD,CAAzC,CAJhB;AAKI,IAAA,SAAS,EAAC,gCALd;AAMI,IAAA,OAAO,EAAEM,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAiBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,CADJ;AAqBH,CA/CD;;AAiDA,eAAeL,IAAf","sourcesContent":["import React from 'react';\nimport {VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH} from '../../shared/util/validators';\nimport Input from '../../shared/components/FormElements/Input';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Button from '../../shared/components/UIElements/Button';\n\n\n\nconst Auth = () => {\n\n    const [formState, changeHandler] = \n        useForm(\n            {\n                email: {\n                    value: 'a@b.c',\n                    isValid: false\n                },\n                password: {\n                    value: '',\n                    isValid: false\n                } \n            }, false\n    );\n\n\n\n\n    // send data to the server!\n    const submitHandler = event => {\n        event.preventDefault();\n        // check if json is ok\n        console.log(formState.inputs);\n    };\n\n    return (\n        <form className=\"song-form\">\n            <Input id=\"email\"\n                element=\"input\"\n                type=\"text\" \n                label=\"Email\"\n                validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]} \n                errorText='Please enter a valid email!'\n                onInput={changeHandler}\n                 /> \n            <Input id=\"password\"\n                element=\"input\"\n                type=\"password\" \n                label=\"Password\"\n                validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(100)]} \n                errorText='Please enter a valid password!'\n                onInput={changeHandler}\n                /> \n            <Button type=\"submit\" disabled={!formState.isValid}>Login</Button>\n        </form>\n    );\n}\n\nexport default Auth;\n\n"]},"metadata":{},"sourceType":"module"}