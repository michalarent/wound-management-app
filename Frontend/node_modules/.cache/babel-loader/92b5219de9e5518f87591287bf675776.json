{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/songs/components/WoundTable.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./WoundTable.css\";\nimport WoundItem from \"./WoundItem\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3) // top: `${top}%`,\n    // margin: \"auto\",\n\n  }\n}));\nvar rows;\nconst [loadedWounds, setLoadedWounds] = useState([]);\nuseEffect(() => {\n  const sendRequest = async () => {\n    const response = await fetch(`http://localhost:5000/api/wounds/user/${userId}`);\n    const responseData = await response.json();\n    console.log(responseData);\n\n    if (!response.ok) {} else {\n      setLoadedWounds(responseData.wound);\n      rows = responseData.wound;\n      console.log(\"rows below\");\n      console.log(rows);\n    }\n  };\n\n  sendRequest();\n}, []);\nconst auth = useContext(AuthContext);\nconst userId = useParams().userId;\nconst classes = useStyles();\nexport default class WoundTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: rows,\n      selectedRow: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      className: \"table\",\n      data: this.props.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Body Part\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Last Edited\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Created On\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, loadedWounds.map(loadedWound => /*#__PURE__*/React.createElement(TableRow, {\n      key: loadedWound.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, loadedWound.name, console.log(loadedWound)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, loadedWound.bodyPart), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, loadedWound.description), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, loadedWound.dateLastEdited), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, loadedWound.dateCreated), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \"Open Modal\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/songs/components/WoundTable.js"],"names":["React","useState","useEffect","Component","useParams","useContext","AuthContext","makeStyles","Button","useTheme","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","PageviewIcon","Modal","WoundItem","useStyles","theme","table","minWidth","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","rows","loadedWounds","setLoadedWounds","sendRequest","response","fetch","userId","responseData","json","console","log","ok","wound","auth","classes","WoundTable","state","data","selectedRow","render","props","map","loadedWound","id","name","bodyPart","description","dateLastEdited","dateCreated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport \"./WoundTable.css\";\nimport WoundItem from \"./WoundItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    // top: `${top}%`,\n    // margin: \"auto\",\n  },\n}));\n\nvar rows;\nconst [loadedWounds, setLoadedWounds] = useState([]);\nuseEffect(() => {\n  const sendRequest = async () => {\n    const response = await fetch(\n      `http://localhost:5000/api/wounds/user/${userId}`\n    );\n    const responseData = await response.json();\n    console.log(responseData);\n    if (!response.ok) {\n    } else {\n      setLoadedWounds(responseData.wound);\n      rows = responseData.wound;\n      console.log(\"rows below\");\n      console.log(rows);\n    }\n  };\n  sendRequest();\n}, []);\n\nconst auth = useContext(AuthContext);\nconst userId = useParams().userId;\nconst classes = useStyles();\n\nexport default class WoundTable extends Component {\n  state = {\n    data: rows,\n    selectedRow: null,\n  };\n\n  render() {\n    return (\n      <TableContainer\n        component={Paper}\n        className=\"table\"\n        data={this.props.data}\n      >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Body Part</TableCell>\n              <TableCell align=\"right\">Description</TableCell>\n              <TableCell align=\"right\">Last Edited</TableCell>\n              <TableCell align=\"right\">Created On</TableCell>\n              <TableCell align=\"right\"></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loadedWounds.map((loadedWound) => (\n              <TableRow key={loadedWound.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {loadedWound.name}\n                  {console.log(loadedWound)}\n                </TableCell>\n                <TableCell align=\"right\">{loadedWound.bodyPart}</TableCell>\n                <TableCell align=\"right\">{loadedWound.description}</TableCell>\n                <TableCell align=\"right\">\n                  {loadedWound.dateLastEdited}\n                </TableCell>\n                <TableCell align=\"right\">{loadedWound.dateCreated}</TableCell>\n                <TableCell align=\"right\">\n                  <Button type=\"button\">Open Modal</Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}