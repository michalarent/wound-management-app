{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams} from 'react-router-dom';\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/UIElements/Button';\n// import { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\n// import './NewSong.css';\n// import { useForm } from '../../shared/hooks/form-hook';\n// const DUMMY_SONGS = [\n//     {\n//         id: 's1',\n//         title: 'Jebać PiS',\n//         description: 'One of the most important songs of 2020 and 2021',\n//         image: 'https://i.ytimg.com/vi/FQq6Mwv_jpw/maxresdefault.jpg',\n//         length: '3500',\n//         creator: 'u1'\n//     },\n//     {\n//         id: 's2',\n//         title: 'Jebać SąD',\n//         description: 'One of the most important songs of 2020 and 2021',\n//         image: 'https://pbs.twimg.com/media/EbXlmjgWsAEy0Ph.png',\n//         length: '3500',\n//         creator: 'u2'\n//     },\n// ]\n// const UpdateSong = () => {\n//     const [isLoading, setIsLoading] = useState(true);\n//     const songId = useParams().songId;\n//     const [formState, changeHandler, setFormData] = useForm(\n//       {\n//         title: {\n//           value: '',\n//           isValid: false\n//         },\n//         description: {\n//           value: '',\n//           isValid: false\n//         }\n//       },\n//       false\n//     );\n//     const identifiedSong = DUMMY_SONGS.find(p => p.id === songId);\n//     useEffect(() => {\n//         if (identifiedSong) {\n//             setFormData(\n//                 {\n//                 title: {\n//                     value: identifiedSong.title,\n//                     isValid: true\n//                 },\n//                 description: {\n//                     value: identifiedSong.description,\n//                     isValid: true\n//                 }\n//                 },\n//                 true\n//             );\n//          }\n//             setIsLoading(false);\n//             }, [setFormData, identifiedSong]);\n//             const songSubmitHandler = event => {\n//             event.preventDefault();\n//             console.log(formState.inputs);\n//         };\n//     if (!identifiedSong) {\n//       return (\n//         <div className=\"center\">\n//           <h2>Could not find place!</h2>\n//         </div>\n//       );\n//     }\n//     if (isLoading) {\n//       return (\n//         <div className=\"center\">\n//           <h2>Loading...</h2>\n//         </div>\n//       );\n//     }\n//     return (\n//       <form className=\"song-form\" onSubmit={songSubmitHandler}>\n//         <Input\n//           id=\"title\"\n//           element=\"input\"\n//           type=\"text\"\n//           label=\"Title\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid title.\"\n//           onInput={changeHandler}\n//           initialValue={formState.inputs.title.value}\n//           initialValid={formState.inputs.title.isValid}\n//         />\n//         <Input\n//           id=\"description\"\n//           element=\"textarea\"\n//           label=\"Description\"\n//           validators={[VALIDATOR_MINLENGTH(5)]}\n//           errorText=\"Please enter a valid description (min. 5 characters).\"\n//           onInput={changeHandler}\n//           initialValue={formState.inputs.description.value}\n//           initialValid={formState.inputs.description.isValid}\n//         />\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           UPDATE PLACE\n//         </Button>\n//       </form>\n//     );\n//   };\n//   export default UpdateSong;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/UpdateSong.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams} from 'react-router-dom';\n\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/UIElements/Button';\n// import { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\n\n// import './NewSong.css';\n// import { useForm } from '../../shared/hooks/form-hook';\n\n// const DUMMY_SONGS = [\n//     {\n//         id: 's1',\n//         title: 'Jebać PiS',\n//         description: 'One of the most important songs of 2020 and 2021',\n//         image: 'https://i.ytimg.com/vi/FQq6Mwv_jpw/maxresdefault.jpg',\n//         length: '3500',\n//         creator: 'u1'\n        \n//     },\n//     {\n//         id: 's2',\n//         title: 'Jebać SąD',\n//         description: 'One of the most important songs of 2020 and 2021',\n//         image: 'https://pbs.twimg.com/media/EbXlmjgWsAEy0Ph.png',\n//         length: '3500',\n//         creator: 'u2'\n        \n//     },\n// ]\n\n// const UpdateSong = () => {\n//     const [isLoading, setIsLoading] = useState(true);\n//     const songId = useParams().songId;\n  \n//     const [formState, changeHandler, setFormData] = useForm(\n//       {\n//         title: {\n//           value: '',\n//           isValid: false\n//         },\n//         description: {\n//           value: '',\n//           isValid: false\n//         }\n//       },\n//       false\n//     );\n  \n//     const identifiedSong = DUMMY_SONGS.find(p => p.id === songId);\n  \n//     useEffect(() => {\n//         if (identifiedSong) {\n//             setFormData(\n//                 {\n//                 title: {\n//                     value: identifiedSong.title,\n//                     isValid: true\n//                 },\n//                 description: {\n//                     value: identifiedSong.description,\n//                     isValid: true\n//                 }\n//                 },\n//                 true\n//             );\n//          }\n//             setIsLoading(false);\n//             }, [setFormData, identifiedSong]);\n        \n//             const songSubmitHandler = event => {\n//             event.preventDefault();\n//             console.log(formState.inputs);\n            \n//         };\n  \n//     if (!identifiedSong) {\n//       return (\n//         <div className=\"center\">\n//           <h2>Could not find place!</h2>\n//         </div>\n//       );\n//     }\n  \n//     if (isLoading) {\n//       return (\n//         <div className=\"center\">\n//           <h2>Loading...</h2>\n//         </div>\n//       );\n//     }\n  \n//     return (\n//       <form className=\"song-form\" onSubmit={songSubmitHandler}>\n//         <Input\n//           id=\"title\"\n//           element=\"input\"\n//           type=\"text\"\n//           label=\"Title\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid title.\"\n//           onInput={changeHandler}\n//           initialValue={formState.inputs.title.value}\n//           initialValid={formState.inputs.title.isValid}\n//         />\n//         <Input\n//           id=\"description\"\n//           element=\"textarea\"\n//           label=\"Description\"\n//           validators={[VALIDATOR_MINLENGTH(5)]}\n//           errorText=\"Please enter a valid description (min. 5 characters).\"\n//           onInput={changeHandler}\n//           initialValue={formState.inputs.description.value}\n//           initialValid={formState.inputs.description.isValid}\n//         />\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           UPDATE PLACE\n//         </Button>\n//       </form>\n//     );\n//   };\n  \n//   export default UpdateSong;\n\n"]},"metadata":{},"sourceType":"module"}