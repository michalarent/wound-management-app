{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    onChange: changeHandler,\n    id: props.id,\n    type: props.type,\n    placeholder: props.plaeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.label), element);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputState","dispatch","changeHandler","event","target","element","id","plaeholder","rows","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAmC,OAAnC;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EACDF,MAAM,CAACG,GAHR;AAICC,QAAAA,OAAO,EACH;AALL,OAAP;;AAOJ;AACI,aAAOL,KAAP;AAVR;AAYH,CAbD;;AAcA,MAAMM,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACC,YAAD,EAAe;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYE,IAAAA,OAAO,EAAE;AAArB,GAAf,CAAzC;;AAGA,QAAMK,aAAa,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAE,QAAP;AAAiBE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAAnC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMU,OAAO,GAAGN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBAA4B;AAAO,IAAA,QAAQ,EAAIH,aAAnB;AAAkC,IAAA,EAAE,EAAEH,KAAK,CAACO,EAA5C;AAAgD,IAAA,IAAI,EAAEP,KAAK,CAACL,IAA5D;AAAkE,IAAA,WAAW,EAAEK,KAAK,CAACQ,UAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,gBACd;AAAU,IAAA,EAAE,EAAER,KAAK,CAACO,EAApB;AAAwB,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAA5C;AAAgD,IAAA,QAAQ,EAAIN,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAEH,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACU,KAAjC,CADJ,EAEKJ,OAFL,CADJ;AAMH,CAlBD;;AAoBA,eAAeP,KAAf","sourcesContent":["import React, { useReducer }  from 'react';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: \n                    action.val,\n                    isValid:\n                        true\n            };\n        default:\n            return state;\n    }\n}\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {value: '', isValid: false});\n\n\n    const changeHandler = event => {\n        dispatch({type: 'CHANGE', val: event.target.value});\n    };\n\n    const element = props.element === 'input' ? <input onChange = {changeHandler} id={props.id} type={props.type} placeholder={props.plaeholder} /> \n    : <textarea id={props.id} rows={props.rows || 3 } onChange = {changeHandler} />\n\n    \n    return (\n        <div className={`form-control`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n        </div>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}