{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/NewSong.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_URL } from '../../shared/util/validators';\nimport Button from '../../shared/components/UIElements/Button';\nimport './NewSong.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewSong = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      url: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const changeHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []); // send data to the server!\n\n  const submitHandler = event => {\n    event.preventDefault(); // check if json is ok\n\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"song-form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(3)],\n    errorText: \"Please enter a valid description!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"url\",\n    element: \"input\",\n    label: \"Song URL\",\n    validators: [VALIDATOR_URL()],\n    errorText: \"Please enter a valid URL!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }, \"ADD SONG\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Is the form valid? \", String(formState.isValid)));\n};\n\nexport default NewSong;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/songs/pages/NewSong.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_URL","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewSong","formState","dispatch","title","description","url","changeHandler","id","submitHandler","event","preventDefault","console","log","String"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AAEA,SAAQC,iBAAR,EAA2BC,mBAA3B,EAAgDC,aAAhD,QAAoE,8BAApE;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,eAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAChC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC5BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACH,SAFD,MAEO;AACHH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACH;AACJ;;AAED,aAAO,EACH,GAAGN,KADA;AAEHK,QAAAA,MAAM,EAAE,EACJ,GAAGL,KAAK,CAACK,MADL;AAEJ,WAACJ,MAAM,CAACG,OAAR,GAAkB;AACdG,YAAAA,KAAK,EAAEN,MAAM,CAACM,KADA;AAEdD,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAFF;AAFd,SAFL;AAQHA,QAAAA,OAAO,EAAEH;AARN,OAAP;;AAUJ;AACI,aAAOH,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,MAAMQ,OAAO,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAyBjB,UAAU,CAACM,WAAD,EAAc;AAClDM,IAAAA,MAAM,EAAE;AACJM,MAAAA,KAAK,EAAE;AACHJ,QAAAA,KAAK,EAAE,EADJ;AAEHD,QAAAA,OAAO,EAAE;AAFN,OADH;AAKJM,MAAAA,WAAW,EAAE;AACTL,QAAAA,KAAK,EAAE,EADE;AAETD,QAAAA,OAAO,EAAE;AAFA,OALT;AASJO,MAAAA,GAAG,EAAE;AACDN,QAAAA,KAAK,EAAE,EADN;AAEDD,QAAAA,OAAO,EAAE;AAFR;AATD,KAD0C;AAelDA,IAAAA,OAAO,EAAE;AAfyC,GAAd,CAAzC;AAkBC,QAAMQ,aAAa,GAAGtB,WAAW,CAAC,CAACuB,EAAD,EAAKR,KAAL,EAAYD,OAAZ,KAAwB;AACtDI,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,cADD;AAELK,MAAAA,KAAK,EAAEA,KAFF;AAGLD,MAAAA,OAAO,EAAEA,OAHJ;AAILF,MAAAA,OAAO,EAAEW;AAJJ,KAAD,CAAR;AAMH,GAPgC,EAO9B,EAP8B,CAAjC,CAnBkB,CA4BlB;;AACA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAE3B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACJ,MAAtB;AACH,GAJD;;AAOA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEW,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,UAAU,EAAE,CAACrB,iBAAiB,EAAlB,CAJhB;AAKI,IAAA,SAAS,EAAC,6BALd;AAMI,IAAA,OAAO,EAAEmB,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,aAAV;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,UAAU,EAAE,CAAClB,mBAAmB,CAAC,CAAD,CAApB,CAHhB;AAII,IAAA,SAAS,EAAC,mCAJd;AAKI,IAAA,OAAO,EAAEkB,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAcI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,KAAV;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,UAAU,EAAE,CAACjB,aAAa,EAAd,CAHhB;AAII,IAAA,SAAS,EAAC,2BAJd;AAKI,IAAA,OAAO,EAAEiB,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAoBG,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACL,SAAS,CAACH,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBH,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBe,MAAM,CAACZ,SAAS,CAACH,OAAX,CAA7B,CArBJ,CADJ;AAyBH,CA7DD;;AA+DA,eAAeE,OAAf","sourcesContent":["import React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input'\n\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_URL} from '../../shared/util/validators'\nimport Button from '../../shared/components/UIElements/Button'\n\nimport './NewSong.css';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { \n                        value: action.value, \n                        isValid: action.isValid }\n                },\n                isValid: formIsValid\n            }\n        default:\n            return state;\n    }\n};\n\nconst NewSong = () => {\n   const [formState, dispatch] =  useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            },\n            url: {\n                value: '',\n                isValid: false\n            }\n        },\n        isValid: false\n    });\n\n    const changeHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value, \n            isValid: isValid, \n            inputId: id\n        })\n    }, []);\n\n    // send data to the server!\n    const submitHandler = event => {\n        event.preventDefault();\n        // check if json is ok\n        console.log(formState.inputs);\n    };\n    \n\n    return (\n        <form className=\"song-form\" onSubmit={submitHandler}>\n            <Input id=\"title\"\n                element=\"input\"\n                type=\"text\" \n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]} \n                errorText='Please enter a valid title!'\n                onInput={changeHandler} />     \n            <Input id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(3)]} \n                errorText='Please enter a valid description!'\n                onInput={changeHandler}/>\n            <Input id=\"url\"\n                element=\"input\"\n                label=\"Song URL\"\n                validators={[VALIDATOR_URL()]} \n                errorText='Please enter a valid URL!'\n                onInput={changeHandler}/>\n           <Button type=\"submit\" disabled={!formState.isValid}>ADD SONG</Button> \n            <p>Is the form valid? {String(formState.isValid)}</p>\n        </form>\n    );\n}\n\nexport default NewSong;"]},"metadata":{},"sourceType":"module"}