{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH } from \"../../shared/util/validators\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Button from \"../../shared/components/UIElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState();\n  const [formState, changeHandler, setFormData] = useForm({\n    name: {\n      value: \"\",\n      isValid: false\n    },\n    email: {\n      value: \"a@b.c\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false); // send data to the server!\n\n  const submitHandler = async event => {\n    event.preventDefault(); // check if json is ok\n\n    console.log(formState.inputs);\n\n    if (isLoginMode) {} else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        console.log(responseData);\n        auth.login();\n      } catch (err) {\n        setError(err.message || 'Something went wrong, please try again.');\n      }\n    }\n  };\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your name\",\n    validators: [VALIDATOR_REQUIRE],\n    errorText: \"Please enter your name\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Email\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(100)],\n    errorText: \"Please enter a valid password!\",\n    onInput: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Switch\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Auth.js"],"names":["React","useState","useContext","VALIDATOR_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MAXLENGTH","Input","useForm","Button","Card","AuthContext","Auth","auth","isLoginMode","setIsLoginMode","formState","changeHandler","setFormData","name","value","isValid","email","password","submitHandler","event","preventDefault","console","log","inputs","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","login","err","setError","switchModeHandler","undefined","prevMode"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MAXLENGTH,\n} from \"../../shared/util/validators\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Button from \"../../shared/components/UIElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport \"./Auth.css\";\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState();\n\n  const [formState, changeHandler, setFormData] = useForm(\n    {\n      name: {\n        value: \"\",\n        isValid: false,\n      },\n      email: {\n        value: \"a@b.c\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  // send data to the server!\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    // check if json is ok\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n    } else {\n      try {\n        \n        \n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        console.log(responseData);\n        \n        auth.login();\n      } catch (err) {\n        \n        setError(err.message || 'Something went wrong, please try again.');\n      }\n    }\n    \n  }\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        { name: undefined },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <form onSubmit={submitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your name\"\n            validators={[VALIDATOR_REQUIRE]}\n            errorText=\"Please enter your name\"\n            onInput={changeHandler}\n          />\n        )}\n        <Input\n          id=\"email\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Email\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email!\"\n          onInput={changeHandler}\n        />\n        <Input\n          id=\"password\"\n          element=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(100)]}\n          errorText=\"Please enter a valid password!\"\n          onInput={changeHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>\n      </form>\n      <Button onClick={switchModeHandler}>Switch</Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}