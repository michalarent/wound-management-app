{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer, useEffect } from 'react'; //useEffect to run some logic whenever input value/validity changes\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isValid: false,\n    isValid: props.valid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ype: props.type,\n    placeholder: props.placeholder,\n    value: inputState.value,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    value: inputState.value,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","valid","id","onInput","changeHandler","event","target","element","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA8C,OAA9C,C,CAEA;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EACDF,MAAM,CAACG,GAHR;AAICC,QAAAA,OAAO,EACHP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AALb,OAAP;;AAOJ;AACI,aAAON,KAAP;AAVR;AAYH,CAbD;;AAcA,MAAMO,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,UAAD,EAAaC,QAAb,IACFd,UAAU,CAACG,YAAD,EACN;AACII,IAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAe,EAD1B;AAEIE,IAAAA,OAAO,EAAE,KAFb;AAGIA,IAAAA,OAAO,EAAEG,KAAK,CAACG,KAAN,IAAe;AAH5B,GADM,CADd;AASA,QAAM;AAACC,IAAAA,EAAD;AAAIC,IAAAA;AAAJ,MAAeL,KAArB;AACA,QAAM;AAACL,IAAAA,KAAD;AAAOE,IAAAA;AAAP,MAAmBI,UAAzB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACD,EAAD,EAAKT,KAAL,EAAYE,OAAZ,CAAP;AACH,GAFQ,EAEN,CAACO,EAAD,EAAKT,KAAL,EAAYE,OAAZ,EAAqBQ,OAArB,CAFM,CAAT;;AAKA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3BL,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,QADD;AAELE,MAAAA,GAAG,EAAEW,KAAK,CAACC,MAAN,CAAab,KAFb;AAGLG,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAHb,KAAD,CAAR;AAKH,GAND;;AAQA,QAAMW,OAAO,GAAGT,KAAK,CAACS,OAAN,KAAkB,OAAlB,gBACZ;AACI,IAAA,EAAE,EAAET,KAAK,CAACI,EADd;AAEI,IAAA,GAAG,EAAEJ,KAAK,CAACN,IAFf;AAGI,IAAA,WAAW,EAAEM,KAAK,CAACU,WAHvB;AAII,IAAA,KAAK,EAAET,UAAU,CAACN,KAJtB;AAKI,IAAA,QAAQ,EAAIW,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,gBAOd;AACM,IAAA,EAAE,EAAEN,KAAK,CAACI,EADhB;AAEM,IAAA,IAAI,EAAEJ,KAAK,CAACW,IAAN,IAAc,CAF1B;AAGM,IAAA,KAAK,EAAEV,UAAU,CAACN,KAHxB;AAIM,IAAA,QAAQ,EAAIW,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF;AAcA,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAe,CAACL,UAAU,CAACJ,OAAZ,IAAuB,uBAAwB,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAEG,KAAK,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,KAAK,CAACY,KAAjC,CADJ,EAEKH,OAFL,EAGK,CAACR,UAAU,CAACJ,OAAZ,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACa,SAAV,CAH5B,CADJ;AAOH,CA/CD;;AAiDA,eAAed,KAAf","sourcesContent":["import React, { useReducer, useEffect }  from 'react';\n\n//useEffect to run some logic whenever input value/validity changes\n\nimport { validate } from '../../util/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: \n                    action.val,\n                    isValid:\n                        validate(action.val, action.validators)\n            };\n        default:\n            return state;\n    }\n}\nconst Input = props => {\n    const [inputState, dispatch] = \n        useReducer(inputReducer, \n            {\n                value: props.value || '', \n                isValid: false,\n                isValid: props.valid || false \n            }\n        );\n    \n    const {id,onInput} = props;\n    const {value,isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value, \n            validators: props.validators\n        });\n    };\n\n    const element = props.element === 'input' ? \n        <input \n            id={props.id} \n            ype={props.type} \n            placeholder={props.placeholder} \n            value={inputState.value}\n            onChange = {changeHandler} /> \n    : <textarea \n            id={props.id} \n            rows={props.rows || 3 }\n            value={inputState.value}\n            onChange = {changeHandler} />\n\n    \n    return (\n        <div className={`form-control ${!inputState.isValid && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}