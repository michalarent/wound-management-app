{"ast":null,"code":"var _jsxFileName = \"/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Users.js\";\nimport React, { useEffect, useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\n\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      const response = await fetch(\"http://localhost:5000/api/users\");\n      const responseData = await response.json();\n\n      if (!response.ok) {} else {\n        setLoadedUsers(responseData.users);\n      }\n    };\n\n    sendRequest();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loadedUsers && /*#__PURE__*/React.createElement(UsersList, {\n    items: loadedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/michalarent/Documents/TIN-project/Frontend/src/users/pages/Users.js"],"names":["React","useEffect","useState","UsersList","Users","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AAGd,UAAMM,WAAW,GAAG,YAAY;AAE9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB,CAEjB,CAFD,MAEO;AACLN,QAAAA,cAAc,CAACI,YAAY,CAACG,KAAd,CAAd;AACD;AAEF,KAVD;;AAWAN,IAAAA,WAAW;AACZ,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI,0CACCF,WAAW,iBAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAGA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CADJ;AAMD,CAzBD;;AA2BA,eAAeD,KAAf","sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\n\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n\n\n    const sendRequest = async () => {\n      \n      const response = await fetch(\"http://localhost:5000/api/users\");\n      const responseData = await response.json();\n      if (!response.ok) {\n        \n      } else {\n        setLoadedUsers(responseData.users);\n      }\n      \n    };\n    sendRequest();\n  }, []);\n\n  return (\n      <>\n      {loadedUsers && <UsersList items ={loadedUsers} />}\n       \n       </>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}